# GitLab CI/CD Pipeline for Flora & Fauna Data Collection App
stages:
  - test
  - deploy

variables:
  PYTHON_VERSION: "3.11"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

# Test Stage - Basic syntax and dependency check
test_app:
  stage: test
  image: python:3.11-slim
  tags:
    - docker
  before_script:
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt
  script:
    - echo "🧪 Testing Flora & Fauna Data Collection App"
    - python -c "print('✅ Python is working')"
    - python -m py_compile app.py
    - python -c "import streamlit; print('✅ Streamlit imported successfully')"
    - python -c "import pandas; print('✅ Pandas imported successfully')"  
    - python -c "import requests; print('✅ Requests imported successfully')"
    - python -c "from supabase import create_client; print('✅ Supabase client imported successfully')"
    - echo "✅ All tests passed - app is ready for deployment"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# Deploy to GitLab Pages - Documentation
pages:
  stage: deploy
  image: alpine:latest
  tags:
    - docker
  script:
    - mkdir public
    - echo "<!DOCTYPE html>
<html>
<head>
    <title>Flora & Fauna Data Collection App</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #2e8b57; }
        .deploy-option { background: #f0f8f0; padding: 15px; margin: 10px 0; border-radius: 5px; border-left: 4px solid #2e8b57; }
        .status { background: #e8f5e8; padding: 10px; border-radius: 5px; margin: 20px 0; }
        pre { background: #f8f8f8; padding: 10px; border-radius: 5px; overflow-x: auto; }
    </style>
</head>
<body>
    <div class=\"container\">
        <h1>🌿 Flora & Fauna Data Collection App</h1>
        
        <div class=\"status\">
            <strong>✅ Status:</strong> Tests passed successfully! Your app is ready for deployment.
        </div>

        <h2>🚀 Deployment Options</h2>
        
        <div class=\"deploy-option\">
            <h3>🌐 Streamlit Cloud (Recommended)</h3>
            <p>Deploy directly from your GitLab repository:</p>
            <ol>
                <li>Go to <a href=\"https://share.streamlit.io\" target=\"_blank\">share.streamlit.io</a></li>
                <li>Connect your GitLab account</li>
                <li>Select this repository: <code>Flora and Fauna</code></li>
                <li>Set main file: <code>app.py</code></li>
                <li>Add your Supabase secrets in the app settings</li>
            </ol>
        </div>

        <div class=\"deploy-option\">
            <h3>🐳 Docker Deployment</h3>
            <p>Run with Docker:</p>
            <pre>docker build -t flora-fauna .
docker run -p 8501:8501 flora-fauna</pre>
        </div>

        <div class=\"deploy-option\">
            <h3>🖥️ Local Development</h3>
            <p>Run locally:</p>
            <pre>pip install -r requirements.txt
streamlit run app.py</pre>
        </div>

        <h2>⚙️ Configuration</h2>
        <p>Make sure to set up your Supabase credentials:</p>
        <ul>
            <li><code>SUPABASE_URL</code> - Your Supabase project URL</li>
            <li><code>SUPABASE_ANON_KEY</code> - Your Supabase anonymous key</li>
        </ul>

        <h2>📝 Features</h2>
        <ul>
            <li>Multi-format data collection (Text, Audio, Video, Images)</li>
            <li>Automatic location detection</li>
            <li>Cloud storage with Supabase</li>
            <li>Real-time data analytics</li>
            <li>Team collaboration support</li>
        </ul>

        <hr>
        <p><small>Generated by GitLab CI/CD • Repository: $CI_PROJECT_URL</small></p>
    </div>
</body>
</html>" > public/index.html
    - echo "✅ Deployment guide generated"
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

# Deployment information summary
deployment_summary:
  stage: deploy
  image: alpine:latest
  tags:
    - docker
  script:
    - echo "🌿 Flora & Fauna Data Collection App - Deployment Summary"
    - echo "========================================================"
    - echo "✅ Tests: All passed"
    - echo "📄 Documentation: Available at GitLab Pages"
    - echo "🔗 Repository: $CI_PROJECT_URL"
    - echo ""
    - echo "🚀 Ready for deployment to:"
    - echo "   • Streamlit Cloud (Recommended)"
    - echo "   • Docker containers"
    - echo "   • Local development"
    - echo ""
    - echo "📋 Next steps:"
    - echo "   1. Set up Supabase credentials"
    - echo "   2. Choose deployment platform"
    - echo "   3. Deploy and test"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
