[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "flora-fauna-chatbot"
version = "2.1.0"
description = "Bilingual AI-powered chatbot for flora and fauna data collection and query"
authors = [
    {name = "Thirumalesh Pinninti", email = "thirumalesh@example.com"},
    {name = "DAYAKAR123", email = "dayakar@example.com"}
]
license = {text = "AGPL-3.0"}
readme = "README.md"
requires-python = ">=3.8"
keywords = ["flora", "fauna", "chatbot", "bilingual", "biodiversity", "telugu"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Education",
    "Natural Language :: English",
    "Natural Language :: Telugu",
]
dependencies = [
    "streamlit>=1.28.0",
    "pandas>=2.2.0",
    "supabase>=2.3.0",
    "requests>=2.31.0",
    "matplotlib>=3.8.0",
    "plotly>=5.17.0",
    "pillow>=10.0.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]

[project.urls]
Homepage = "https://code.swecha.org/DAYAKAR123/flora"
Repository = "https://code.swecha.org/DAYAKAR123/flora"
Documentation = "https://code.swecha.org/DAYAKAR123/flora"
Issues = "https://code.swecha.org/DAYAKAR123/flora/-/issues"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["chatbot", "supabase_db", "data_utils"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "bilingual: marks tests that require bilingual functionality",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    ".venv/*",
    "venv/*",
    "setup.py",
    "*/migrations/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
